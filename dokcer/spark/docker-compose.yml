version: "3.7"

networks:
  hadoop-net:
    driver: bridge

services:

   namenode:
      image: apache/hadoop:3.3.5
      container_name: namenode
      hostname: namenode  # 指定 NameNode 主機名
      command: ["hdfs", "namenode"]  # 啟動 NameNode 進程
      user: "root:root"  # 以 root 用戶運行
      ports:
        - 9870:9870  # NameNode Web UI 端口
        - 8020:8020  # HDFS 訪問端口
        - 10020:10020
        - 19888:19888  # 歷史訊息 訪問端口
      volumes:
        - namenode:/tmp/hadoop-root/dfs  # 持久化存儲 NameNode 數據
      env_file:
        - ./config.env  # 加載環境變量配置
      privileged: true  # 允許容器以特權模式運行
      environment:
          ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"  # 指定 NameNode 存儲目錄
      networks:
        - hadoop-net

   resourcemanager:
      image: apache/hadoop:3.3.5
      container_name: resourcemanager
      hostname: resourcemanager  # 指定 ResourceManager 主機名
      command: ["yarn", "resourcemanager"]  # 啟動 YARN ResourceManager 進程
      user: "root:root"
      ports:
         - 8088:8088  # ResourceManager Web UI 端口
         - 8030:8030  # Application Manager 端口
         - 8031:8031  # Application Master 端口
         - 8032:8032  # 資源調度端口
         - 8033:8033  # 保留端口
      env_file:
        - ./config.env  # 加載環境變量配置
      volumes:
        - ./test.sh:/opt/test.sh
      networks:
        - hadoop-net
   nodemanager:
      image: apache/hadoop:3.3.5
      container_name: nodemanager
      command: ["yarn", "nodemanager"]  # 啟動 YARN NodeManager 進程
      user: "root:root"
      env_file:
        - ./config.env  # 加載環境變量配置
      ports:
         - 8042:8042  # NodeManager Web UI 端口
      networks:
        - hadoop-net

   datanode01:
      image: apache/hadoop:3.3.5
      container_name: datanode01
      hostname: datanode01  # 指定 DataNode1 主機名
      command: ["hdfs", "datanode"]  # 啟動 DataNode 進程
      user: "root:root"
      ports:
        - 9864:9864
        - 9866:9866
      env_file:
        - ./config.env  # 加載環境變量配置
      privileged: true  # 允許容器以特權模式運行
      volumes:
        - datanode01:/tmp/hadoop-root/dfs  # 持久化存儲 DataNode1 數據
      networks:
        - hadoop-net

   datanode02:
      image: apache/hadoop:3.3.5
      container_name: datanode02
      hostname: datanode02  # 指定 DataNode2 主機名
      command: ["hdfs", "datanode"]  # 啟動 DataNode 進程
      user: "root:root"
      ports:
        - 9865:9864
        - 9867:9866
      env_file:
        - ./config.env  # 加載環境變量配置
      privileged: true  # 允許容器以特權模式運行
      volumes:
        - datanode02:/tmp/hadoop-root/dfs  # 持久化存儲 DataNode2 數據
      networks:
        - hadoop-net

   hive-metastore-db:
     image: mysql:8.0
     container_name: hive-metastore-db
     environment:
       MYSQL_ROOT_PASSWORD: rootpass
       MYSQL_DATABASE: metastore
       MYSQL_USER: hive
       MYSQL_PASSWORD: hivepass
     ports:
       - "3306:3306"
     volumes:
       - './init:/docker-entrypoint-initdb.d'
     networks:
       - hadoop-net

   zookeeper:
     image: confluentinc/cp-zookeeper:7.5.0
     container_name: zookeeper
     environment:
       ZOOKEEPER_CLIENT_PORT: 2181
       ZOOKEEPER_TICK_TIME: 2000
     ports:
       - "2181:2181"
     networks:
       - hadoop-net

   kafka:
     image: confluentinc/cp-kafka:7.5.0
     container_name: kafka
     depends_on:
       - zookeeper
     ports:
       - "9092:9092"
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
     networks:
       - hadoop-net

# 定義持久化存儲卷，用於存儲 HDFS 數據
volumes:
  datanode01:  # DataNode1 數據存儲卷
  datanode02:  # DataNode2 數據存儲卷
  namenode:  # NameNode 數據存儲卷

